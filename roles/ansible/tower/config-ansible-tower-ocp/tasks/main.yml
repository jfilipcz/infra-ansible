---

- include_tasks: prereqs.yml
  when: openshift_host is defined and openshift_host != ''

- name: Check if inventory file variables are defined
  fail: msg="Please specify the value of {{item}} in your inventory file"
  when: "{{item}} is undefined or {{item}} == ''"
  with_items:
    - admin_user
    - admin_password
    - secret_key
    - pg_username
    - pg_password
    - openshift_host
    - openshift_project
    - openshift_user
    - openshift_password

- include_tasks: "{{ tasks }}"
  with_items:
    - openshift_auth.yml
    - openshift.yml
  loop_control:
    loop_var: tasks


- name: "Download & Unpack Ansible Tower installer"
  unarchive:
      src: "{{ ansible_tower_download_url }}"
      dest: "."
      list_files: true
      remote_src: true
      exclude: "inventory"
  register: ansible_tower_download_fact

- name: "Set installation facts"
  set_fact:
      # The first file listed in the output of the unarchiving from downloading tower
      # is the directory so set that as ansible_tower_dir
    ansible_tower_dir: "{{ ansible_tower_download_fact.files.0 }}"

- name: "Set up the Ansible Tower on Openshift Installer inventory"
  template:
      src: inventory.j2
      dest: "{{ ansible_tower_dir }}/inventory"
  register: inventory

- name: "run tower installer"
  shell: ./setup_openshift.sh
  args:
      chdir: "{{ ansible_tower_dir }}"

- name: "parsing installation log..."
  shell: ls -1 setup_container_cluster-* | tail -n 1 | xargs tail -n 2 
  register: in_outcome

- name: "Installation was .."
  when: in_outcome.stdout.find('failed=0') == 0
  debug: msg="Installation was succesfull"

